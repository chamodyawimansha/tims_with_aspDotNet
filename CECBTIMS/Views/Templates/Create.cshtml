@model CECBTIMS.Models.Template

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-8 mx-auto mb-lg-5">
    <div class="card border-primary mb-3">
        <div class="card-header">
            <div class="float-left">
                <h5>Document Template Manager - Upload</h5>
            </div>
            <div class="float-right">
                @Html.ActionLink("Back to List", "Index", null, new {@class = "btn btn-secondary"})
            </div>
        </div>
        <div class="card-body">
            @using (Html.BeginForm($"Create", $"Templates", null, FormMethod.Post, new {enctype = "multipart/form-data"}))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label"})
                    @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
                </div>
                <div class="form-group">
                    <div class="custom-control custom-checkbox">
                        @Html.EditorFor(model => model.HasConfigurableTable, new {htmlAttributes = new {@class = "custom-control-input"}})
                        @Html.LabelFor(model => model.HasConfigurableTable, "Has Configurable Table", htmlAttributes: new {@class = "custom-control-label"})
                    </div>
                    @Html.ValidationMessageFor(model => model.HasConfigurableTable, "", new {@class = "text-danger"})
                    <small id="HasConfigurableTableHelp" class="form-text text-muted">Check this if the selected template have a Employee information Table</small>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ProgramType, htmlAttributes: new {@class = "control-label"})
                    @Html.EnumDropDownListFor(model => model.ProgramType, htmlAttributes: new {@class = "custom-select"})
                    @Html.ValidationMessageFor(model => model.ProgramType, "", new {@class = "text-danger"})
                </div>

                <div class="form-group">
                    <label for="FileInput">Select The Template</label>
                    <input type="file" class="form-control-file" id="FileInput" name="file" aria-describedby="fileHelp">
                    <small id="fileHelp" class="form-text text-muted">Only Pdf, Docx, Doc, PNG, JPG and JPEG are allowed</small>
                </div>


                <div class="form-group float-right">
                    <input type="submit" value="Create" class="btn btn-primary"/>
                </div>
            }
        </div>
    </div>
</div>