@model CECBTIMS.Models.Program

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="col-10 mx-auto mb-5">
<div id="programContent">
<div class="card">
<div class="card-header">
    <h4 class="float-left">Program details</h4>

    <div class="float-right" id="btn-group">
        @Html.ActionLink("Back to List", $"Index", "", new {@class = "btn btn-outline-secondary"})
        @Html.ActionLink("Edit", $"Edit", new {id = Model.Id}, new {@class = "btn btn-warning"})
        @Html.ActionLink("New", $"Edit", new {id = Model.Id}, new {@class = "btn btn-warning"})
        @Html.ActionLink("Employees", $"Details",$"Employees", new {id = Model.Id}, new {@class = "btn btn-warning"})
        @Html.ActionLink("Circulate", $"Edit", new {id = Model.Id}, new {@class = "btn btn-warning"})
        @Html.ActionLink("Delete", $"Delete", new {id = Model.Id}, new {@class = "btn btn-danger"})
        @Html.ActionLink("Documents", $"Edit", new {id = Model.Id}, new {@class = "btn btn-warning"})
        @Html.ActionLink("Reports", $"Edit", new {id = Model.Id}, new {@class = "btn btn-warning"})
    </div>

</div>
<div class="card-body">
<h4 class="d-inline-block mr-sm-2">@Html.DisplayFor(model => model.Title)</h4><span class="badge badge-primary">@Html.DisplayFor(model => model.ProgramType)</span>

<div class="table-responsive-lg">
<table class="table table-bordered">
<tr>
    <th style="width: 10%"></th>
    <th style="width: 10%"></th>
    <th style="width: 10%"></th>
    <th style="width: 10%"></th>
    <th style="width: 10%"></th>
    <th style="width: 10%"></th>
    <th style="width: 10%"></th>
    <th style="width: 10%"></th>
    <th style="width: 10%"></th>
    <th style="width: 10%"></th>

</tr>
@if (Model.ProgramType.ToString() == "InHouse")
{
    <tr>
        <th colspan="2">Program Agendas</th>
        <td colspan="8">

            @if (Model.Agendas.Count > 0)
            {
                <table class="table table-bordered">
                    <tr>
                        <th>Title</th>
                        <th>From</th>
                        <th>To</th>
                        <th style="width: 22%"></th>
                    </tr>
                    @foreach (var item in Model.Agendas)
                    {
                        <tr>
                            <td>@Html.DisplayFor(model => item.Name)</td>
                            <td>@Html.DisplayFor(model => item.From)</td>
                            <td>@Html.DisplayFor(model => item.To)</td>
                            <td>
                                @Html.ActionLink("Edit", $"Edit", $"Agenda", new {id = item.Id, programTitle = Model.Title, programId = Model.Id}, new {@class = "btn btn-warning btn-sm d-inline-block"})

                                @using (Html.BeginForm($"Delete", $"Agenda", "",
                                    FormMethod.Post, new {@class = "d-inline-block"}))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@item.Id"/>
                                    <input type="hidden" name="programId" value="@Model.Id"/>
                                    <input type="submit" value="Remove" class="btn btn-danger btn-sm d-inline-block"/>
                                }
                            </td>
                        </tr>
                    }
                </table>
            }

            @Html.ActionLink("Add an agenda", $"Create", $"Agenda", new {programId = Model.Id, programTitle = Model.Title}, new {@class = "btn btn-sm btn-outline-secondary"})
        </td>
    </tr>
}

<tr>
    <th colspan="2">
        Start Date
    </th>
    <td colspan="8">
        @Html.DisplayFor(model => model.StartDate)
    </td>
</tr>

@if (Model.ProgramType.ToString() == "Foreign")
{
    <tr>
        <th colspan="2">
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <td colspan="8">
            @Html.DisplayFor(model => model.EndDate)
        </td>
    </tr>
}

<tr>
    <th colspan="2">Organised By</th>
    <td colspan="8">

        @if (Model.Organizers.Count > 0)
        {
            <table class="table table-bordered">
                <tr>
                    <th>Organisation Name</th>
                    <th style="width: 10%"></th>
                </tr>
                @foreach (var item in Model.Organizers)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => item.Organizer.Name)
                        </td>
                        <td>
                            @using (Html.BeginForm($"Delete", $"ProgramArrangements", "",
                                FormMethod.Post, new {@class = "d-inline-block"}))
                            {
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@item.Id"/>
                                <input type="hidden" name="programId" value="@Model.Id"/>
                                <input type="submit" value="Remove" class="btn btn-danger btn-sm d-inline-block"/>
                            }
                        </td>
                    </tr>
                }
            </table>
        }

        @Html.ActionLink("Add an Organiser", $"Create", $"Organizers", new {programId = Model.Id, programTitle = Model.Title}, new {@class = "btn btn-sm btn-outline-secondary"})
    </td>
</tr>

@if (Model.ProgramType.ToString() != "PostGraduation")
{
    <tr>
        <th colspan="2">Target Group(s)</th>
        <td colspan="8">
            @if (Model.TargetGroups.Count > 0)
            {
                <table class="table table-bordered">
                    <tr>
                        <th>Name</th>
                        <th style="width: 22%"></th>
                    </tr>
                    @foreach (var item in Model.TargetGroups)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", "TargetGroups", new {id = item.Id}, new {@class = "btn btn-warning btn-sm d-inline-block"})
                                @using (Html.BeginForm($"Delete", $"TargetGroups", "",
                                    FormMethod.Post, new {@class = "d-inline-block"}))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@item.Id"/>
                                    <input type="hidden" name="ProgramId" value="@Model.Id"/>
                                    <input type="submit" value="Remove" class="btn btn-danger btn-sm d-inline-block"/>
                                }
                            </td>
                        </tr>
                    }
                </table>
            }

            @Html.ActionLink("Add a Target Group", "Create", "TargetGroups", new {programId = Model.Id, title = Model.Title}, new {@class = "btn btn-sm btn-outline-secondary"})
        </td>
    </tr>
}

@if (Model.ProgramType.ToString() != "PostGraduation")
{
    <tr>
        <th colspan="2">Employment Category</th>
        <td colspan="3">
            @if (Model.ProgramEmploymentCategories != null)
            {
                <ul>
                    @foreach (var item in Model.ProgramEmploymentCategories)
                    {
                        <li>@Html.DisplayFor(model => item.EmployeeCategory)</li>
                    }
                </ul>
            }
            <a href="">Add an Employment Category</a>
        </td>
        <th colspan="2">Employment Nature</th>
        <td colspan="3">
            @if (Model.ProgramEmploymentNatures != null)
            {
                <ul>
                    @foreach (var item in Model.ProgramEmploymentNatures)
                    {
                        <li>@Html.DisplayFor(model => item.EmploymentNature)</li>
                    }
                </ul>
            }
            <a href="">Add an Employment Nature</a>
        </td>
    </tr>
}

@if (Model.ProgramType.ToString() == "InHouse")
{
    <tr>
        <th colspan="2">Resource Persons</th>
        <td colspan="8">
            @if (Model.ResourcePersons.Count > 0)
            {
                <table class="table table-bordered">
                    <tr>
                        <th>Name</th>
                        <th>Designation</th>
                        <th>Cost</th>
                        <th></th>
                    </tr>
                    @foreach (var item in Model.ResourcePersons)
                    {
                        <tr>
                            <td>@Html.DisplayFor(model => item.Name)</td>
                            <td>@Html.DisplayFor(model => item.Designation)</td>
                            <td>@Html.DisplayFor(model => item.Cost)</td>
                            <th>
                                @Html.ActionLink("Edit",
                                    $"Edit", $"ResourcePersons", new {id = item.Id, programId = Model.Id, programTitle = Model.Title}, new {@class = "btn btn-warning btn-sm"})

                                @using (Html.BeginForm($"Delete", $"ResourcePersons", "",
                                    FormMethod.Post, new {@class = "d-inline-block"}))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@item.Id"/>
                                    <input type="hidden" name="ProgramId" value="@Model.Id"/>
                                    <input type="submit" value="Remove" class="btn btn-danger btn-sm d-inline-block"/>
                                }
                            </th>

                        </tr>
                    }
                </table>
            }

            @Html.ActionLink("Add a resource Person", $"Create", $"ResourcePersons", new {programId = Model.Id, programTitle = Model.Title}, new {@class = "btn btn-sm btn-outline-secondary"})
        </td>
    </tr>
}


@if (Model.ProgramType.ToString() == "PostGraduation")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.Department)</th>
        <td colspan="8">@Html.DisplayFor(model => model.Department)</td>
    </tr>
}

@if (Model.ProgramType.ToString() == "PostGraduation")
{
    <tr>
        <th colspan="2">Requirements</th>
        <td colspan="8">

            @if (Model.Requirements.Count > 0)
            {
                <table class="table table-bordered">
                    <tr>
                        <th>Name</th>
                        <th style="width: 10%"></th>
                    </tr>
                    @foreach (var item in Model.Requirements)
                    {
                        <tr>
                            <td>@Html.DisplayFor(model => item.Name)</td>
                            <td>
                                @using (Html.BeginForm($"Delete", $"Requirements", "",
                                    FormMethod.Post, new {@class = "d-inline-block"}))
                                {
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@item.Id"/>
                                    <input type="hidden" name="ProgramId" value="@Model.Id"/>
                                    <input type="submit" value="Remove" class="btn btn-danger btn-sm d-inline-block"/>
                                }
                            </td>
                        </tr>
                    }

                </table>
            }

            @Html.ActionLink("Add a Requirement", $"Create", $"Requirements", new {programId = Model.Id, programTitle = Model.Title}, new {@class = "btn btn-sm btn-outline-secondary"})
        </td>
    </tr>
}

<tr>
    <th colspan="2">@Html.DisplayNameFor(model => model.ApplicationClosingDate)</th>
    <td colspan="3">@Html.DisplayFor(model => model.ApplicationClosingDate)</td>
    <th colspan="2">@Html.DisplayNameFor(model => model.ApplicationClosingTime)</th>
    <td colspan="3">@Html.DisplayFor(model => model.ApplicationClosingTime)</td>
</tr>

@if (Model.ProgramType.ToString() != "PostGraduation")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.Venue)</th>
        <td colspan="8">@Html.DisplayFor(model => model.Venue)</td>
    </tr>
}
@if (Model.ProgramType.ToString() == "Foreign")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.NotifiedBy)</th>
        <td colspan="4">@Html.DisplayFor(model => model.NotifiedBy)</td>
        <th colspan="2">@Html.DisplayNameFor(model => model.NotifiedOn)</th>
        <td colspan="2">@Html.DisplayFor(model => model.NotifiedOn)</td>
    </tr>
}


@if (Model.ProgramType.ToString() == "Foreign" || Model.ProgramType.ToString() == "Local")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.DurationInDays)</th>
        <td colspan="8">@Html.DisplayFor(model => model.DurationInDays)</td>
    </tr>
}


@if (Model.ProgramType.ToString() == "Foreign" || Model.ProgramType.ToString() == "PostGraduation" || Model.ProgramType.ToString() == "Local")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.DurationInMonths)</th>
        <td colspan="8">@Html.DisplayFor(model => model.DurationInMonths)</td>
    </tr>
}
@if (Model.ProgramType.ToString() == "Local" || Model.ProgramType.ToString() == "InHouse")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.ProgramHours)</th>
        <td colspan="8">@Html.DisplayFor(model => model.ProgramHours)</td>
    </tr>
}



@if (Model.ProgramType.ToString() == "Foreign")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.Currency)</th>
        <td colspan="8">@Html.DisplayFor(model => model.Currency)</td>
    </tr>
}


@if (Model.ProgramType.ToString() == "Foreign" || Model.ProgramType.ToString() == "PostGraduation" || Model.ProgramType.ToString() == "Local")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.ProgramFee)</th>
        <td colspan="8">@Html.DisplayFor(model => model.ProgramFee)</td>
    </tr>
}

@if (Model.ProgramType.ToString() == "PostGraduation")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.RegistrationFee)</th>
        <td colspan="8">@Html.DisplayFor(model => model.RegistrationFee)</td>
    </tr>
}
@if (Model.ProgramType.ToString() == "InHouse")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.PerPersonFee)</th>
        <td colspan="8">@Html.DisplayFor(model => model.PerPersonFee)</td>
    </tr>
}

@if (Model.ProgramType.ToString() == "InHouse")
{
    <tr>
        <th colspan="2">@Html.DisplayNameFor(model => model.NoShowFee)</th>
        <td colspan="8">@Html.DisplayFor(model => model.NoShowFee)</td>
    </tr>
}

@if (Model.ProgramType.ToString() == "Local")
{
    <tr>
        <th colspan="1">@Html.DisplayNameFor(model => model.MemberFee)</th>
        <td colspan="2">@Html.DisplayFor(model => model.MemberFee)</td>
        <th colspan="2">@Html.DisplayNameFor(model => model.NonMemberFee)</th>
        <td colspan="2">@Html.DisplayFor(model => model.NonMemberFee)</td>
        <th colspan="1">@Html.DisplayNameFor(model => model.StudentFee)</th>
        <td colspan="2">@Html.DisplayFor(model => model.StudentFee)</td>
    </tr>
}
<tr>
    <th colspan="2">Other Costs and Fees</th>
    <td colspan="8">

        @if (Model.Costs.Count > 0)
        {
            <table class="table table-bordered">
                <tr>
                    <th>Cost/Fee Name</th>
                    <th>Value</th>
                    <th style="width: 22%"></th>
                </tr>
                @foreach (var item in Model.Costs)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(model => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Value)
                        </td>
                        <td>
                            @Html.ActionLink("Edit",
                                $"Edit", $"Costs", new {id = item.Id, programId = Model.Id}, new {@class = "btn btn-warning btn-sm"})


                            @using (Html.BeginForm($"Delete", $"Costs", "",
                                FormMethod.Post, new {@class = "d-inline-block"}))
                            {
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="id" value="@item.Id"/>
                                <input type="hidden" name="ProgramId" value="@Model.Id"/>
                                <input type="submit" value="Remove" class="btn btn-danger btn-sm d-inline-block"/>
                            }
                        </td>
                    </tr>
                }
            </table>
        }

        @Html.ActionLink("Add a Cost or a Fee", $"Create", $"Costs", new {programId = Model.Id, programTitle = Model.Title}, new {@class = "btn btn-sm btn-outline-secondary"})
    </td>
</tr>
<tr>
    <th colspan="2">@Html.DisplayNameFor(model => model.CreatedAt)</th>
    <td colspan="3">@Html.DisplayFor(model => model.CreatedAt)</td>
    <th colspan="2">@Html.DisplayNameFor(model => model.UpdatedAt)</th>
    <td colspan="3">@Html.DisplayFor(model => model.UpdatedAt)</td>
</tr>
<tr>
    <th colspan="2">@Html.DisplayNameFor(model => model.CreatedBy)</th>
    <td colspan="3">@Html.DisplayFor(model => model.CreatedBy)</td>
    <th colspan="2">@Html.DisplayNameFor(model => model.UpdatedBy)</th>
    <td colspan="3">@Html.DisplayFor(model => model.UpdatedBy)</td>
</tr>
</table>
</div>
</div>
</div>
</div>
</div>