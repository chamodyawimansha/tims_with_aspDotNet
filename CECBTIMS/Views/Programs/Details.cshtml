@model CECBTIMS.Models.Program

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">
<div class="row">
<div id="programOptions" class="col-md-2">
    <div class="list-group">

        @Html.ActionLink("Back to List", "Index", "", new {@class = "list-group-item list-group-item-action"})
        @Html.ActionLink("Edit", "Edit", new {id = Model.Id}, new {@class = "list-group-item list-group-item-action"})
    </div>
</div>

<div id="programContent" class="col-md-10">
<div class="card">
<div class="card-header">
    <h4 class="d-inline-block mr-sm-2">@Html.DisplayFor(model => model.Title)</h4><span class="badge badge-primary">@Html.DisplayFor(model => model.ProgramType)</span>
</div>
<div class="card-body">


<table class="table table-striped">
<tr>
    <th style="width: 25%; padding: 0"></th>
    <th style="width: 25%; padding: 0"></th>
    <th style="width: 25%; padding: 0"></th>
    <th style="width: 25%; padding: 0"></th>
</tr>


@if (Model.ProgramType.ToString() == "InHouse")
{
    <tr>
        <th>Program Agendas</th>
        <td colspan="3">
            <ul>
                @foreach (var item in Model.Agendas)
                {
                    <li>
                        @Html.DisplayFor(model => item.Name)
                        From : @Html.DisplayFor(model => item.From)
                        To : @Html.DisplayFor(model => item.To)
                    </li>
                }
            </ul>
            <a href="">Add an Agenda</a>
        </td>
    </tr>
}


<tr>
    <th>@Html.DisplayNameFor(model => model.StartDate)</th>
    <td>@Html.DisplayFor(model => model.StartDate)</td>
    @if (Model.ProgramType.ToString() == "Foreign")
    {
        <th>
            @Html.DisplayNameFor(model => model.EndDate)
        </th>
        <td>
            @Html.DisplayFor(model => model.EndDate)
        </td>
    }
</tr>
<tr>
    <th>Organised By</th>
    <td colspan="3">
        @if (Model.Organizers != null)
        {
            <ul>
                @foreach (var item in Model.Organizers)
                {
                    <li>@Html.DisplayFor(model => item.Organizer.Name)</li>
                }
            </ul>
        }



        @Html.ActionLink("Add an Organiser", "Create", "Organizers", new {id = Model.Id, organizer = "add"}, null)
    </td>
</tr>
<tr>
    <th>Target Group(s)</th>
    <td colspan="3">
        <ul>
            @foreach (var item in Model.TargetGroups)
            {
                <li>
                    @Html.DisplayFor(modelItem => item.Name)
                    @using (Html.BeginForm($"Delete", $"TargetGroups"))
                    {
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@item.Id"/>
                        <input type="hidden" name="ProgramId" value="@Model.Id"/>
                        <input type="submit" value="Remove" class="float-right btn btn-link"/>
                    }

                    @Html.ActionLink("Edit", "Edit", "TargetGroups", new {id = item.Id}, new {@class = "float-right btn btn-link"})
                </li>
            }
        </ul>

        @Html.ActionLink("Add a Target Group", "Create", "TargetGroups", new {programId = Model.Id, title = Model.Title}, null)
    </td>
</tr>

@if (Model.ProgramType.ToString() != "PostGraduation")
{
    <tr>
        <th>Employment Category</th>
        <td colspan="3">
            @if (Model.ProgramEmploymentCategories != null)
            {
                <ul>
                    @foreach (var item in Model.ProgramEmploymentCategories)
                    {
                        <li>@Html.DisplayFor(model => item.EmployeeCategory)</li>
                    }
                </ul>
            }
            <a href="">Add an Employment Category</a>
        </td>
    </tr>
    <tr>
        <th>Employment Nature</th>
        <td colspan="3">
            @if (Model.ProgramEmploymentNatures != null)
            {
                <ul>
                    @foreach (var item in Model.ProgramEmploymentNatures)
                    {
                        <li>@Html.DisplayFor(model => item.EmploymentNature)</li>
                    }
                </ul>
            }
            <a href="">Add an Employment Nature</a>
        </td>
    </tr>
}
@if (Model.ProgramType.ToString() == "InHouse")
{
    <tr>
        <th>Resource Persons</th>
        <td colspan="3">
            @if (Model.Organizers != null)
            {
                <ul>
                    @foreach (var item in Model.ResourcePersons)
                    {
                        <li>
                            @Html.DisplayFor(model => item.ResourcePerson.Name)<br/>
                            @Html.DisplayFor(model => item.ResourcePerson.Designation)<br/>
                            @Html.DisplayFor(model => item.ResourcePerson.Cost)<br/>

                        </li>
                    }
                </ul>
            }
            <a href="">Add a Resource Person</a>
        </td>
    </tr>
}

@if (Model.ProgramType.ToString() == "PostGraduation")
{
    <tr>
        <th>@Html.DisplayNameFor(model => model.Department)</th>
        <td colspan="3">@Html.DisplayFor(model => model.Department)</td>
    </tr>
}

@if (Model.ProgramType.ToString() == "PostGraduation")
{
    <tr>
        <th>Requirements</th>
        <td colspan="3">
            @if (Model.Requirements != null)
            {
                <ul>
                    @foreach (var item in Model.Requirements)
                    {
                        <li>@Html.DisplayFor(model => item.Name)</li>
                    }
                </ul>
            }
            <a href="">Add a Requirement</a>
        </td>
    </tr>
}

<tr>
    <th>@Html.DisplayNameFor(model => model.ApplicationClosingDate)</th>
    <td>@Html.DisplayFor(model => model.ApplicationClosingDate)</td>
    <th>@Html.DisplayNameFor(model => model.ApplicationClosingTime)</th>
    <td>@Html.DisplayFor(model => model.ApplicationClosingTime)</td>
</tr>

@if (Model.ProgramType.ToString() != "PostGraduation")
{
    <tr>
        <th>@Html.DisplayNameFor(model => model.Venue)</th>
        <td colspan="3">@Html.DisplayFor(model => model.Venue)</td>
    </tr>
}
@if (Model.ProgramType.ToString() == "Foreign")
{
    <tr>
        <th>@Html.DisplayNameFor(model => model.NotifiedBy)</th>
        <td colspan="3">@Html.DisplayFor(model => model.NotifiedBy)</td>
    </tr>
    <tr>
        <th>@Html.DisplayNameFor(model => model.NotifiedOn)</th>
        <td colspan="3">@Html.DisplayFor(model => model.NotifiedOn)</td>
    </tr>
}

<tr>
    @if (Model.ProgramType.ToString() == "Foreign" || Model.ProgramType.ToString() == "Local")
    {
        <th>@Html.DisplayNameFor(model => model.DurationInDays)</th>
        <td>@Html.DisplayFor(model => model.DurationInDays)</td>
    }
    @if (Model.ProgramType.ToString() == "Foreign" || Model.ProgramType.ToString() == "PostGraduation" || Model.ProgramType.ToString() == "Local")
    {
        <th>@Html.DisplayNameFor(model => model.DurationInMonths)</th>
        <td>@Html.DisplayFor(model => model.DurationInMonths)</td>
    }
</tr>
@if (Model.ProgramType.ToString() == "Local" || Model.ProgramType.ToString() == "InHouse")
{
    <tr>
        <th>@Html.DisplayNameFor(model => model.ProgramHours)</th>
        <td colspan="3">@Html.DisplayFor(model => model.ProgramHours)</td>
    </tr>
}
<tr>
    @if (Model.ProgramType.ToString() == "Foreign")
    {
        <th>@Html.DisplayNameFor(model => model.Currency)</th>
        <td>@Html.DisplayFor(model => model.Currency)</td>
    }
    @if (Model.ProgramType.ToString() == "Foreign" || Model.ProgramType.ToString() == "PostGraduation" || Model.ProgramType.ToString() == "Local")
    {
        <th>@Html.DisplayNameFor(model => model.ProgramFee)</th>
        <td>@Html.DisplayFor(model => model.ProgramFee)</td>
    }
</tr>
<tr>
    @if (Model.ProgramType.ToString() == "PostGraduation")
    {
        <th>@Html.DisplayNameFor(model => model.RegistrationFee)</th>
        <td>@Html.DisplayFor(model => model.RegistrationFee)</td>
    }
    @if (Model.ProgramType.ToString() == "InHouse")
    {
        <th>@Html.DisplayNameFor(model => model.PerPersonFee)</th>
        <td>@Html.DisplayFor(model => model.PerPersonFee)</td>
    }
</tr>
<tr>
    @if (Model.ProgramType.ToString() == "InHouse")
    {
        <th>@Html.DisplayNameFor(model => model.NoShowFee)</th>
        <td>@Html.DisplayFor(model => model.NoShowFee)</td>
    }
    @if (Model.ProgramType.ToString() == "Local")
    {
        <th>@Html.DisplayNameFor(model => model.MemberFee)</th>
        <td>@Html.DisplayFor(model => model.MemberFee)</td>
    }
</tr>
@if (Model.ProgramType.ToString() == "Local")
{
    <tr>
        <th>@Html.DisplayNameFor(model => model.NonMemberFee)</th>
        <td>@Html.DisplayFor(model => model.NonMemberFee)</td>
        <th>@Html.DisplayNameFor(model => model.StudentFee)</th>
        <td>@Html.DisplayFor(model => model.StudentFee)</td>
    </tr>
}
<tr>
    <th>Other Costs and Fees</th>
    <td colspan="3">
        @if (Model.Costs != null)
        {
            <ul>
                @foreach (var item in Model.Costs)
                {
                    <li>
                        @Html.DisplayFor(model => item.Name) = @Html.DisplayFor(model => item.Value)
                    </li>
                }
            </ul>
        }
        <a href="">Add a Cost or a Fee</a>
    </td>
</tr>
<tr>
    <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
    <td>@Html.DisplayFor(model => model.CreatedAt)</td>
    <th>@Html.DisplayNameFor(model => model.UpdatedAt)</th>
    <td>@Html.DisplayFor(model => model.UpdatedAt)</td>
</tr>
<tr>
    <th>@Html.DisplayNameFor(model => model.NonMemberFee)</th>
    <td>@Html.DisplayFor(model => model.NonMemberFee)</td>
    <th>@Html.DisplayNameFor(model => model.StudentFee)</th>
    <td>@Html.DisplayFor(model => model.StudentFee)</td>
</tr>
<tr>
    <th>@Html.DisplayNameFor(model => model.CreatedBy)</th>
    <td>@Html.DisplayFor(model => model.CreatedBy)</td>
    <th>@Html.DisplayNameFor(model => model.UpdatedBy)</th>
    <td>@Html.DisplayFor(model => model.UpdatedBy)</td>
</tr>
</table>

</div>
</div>
</div>
</div>
</div>
@* DisplayNameFor(model => model.Brochure) *@