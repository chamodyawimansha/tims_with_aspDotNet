@model CECBTIMS.Models.Program

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card mb-3">
<div class="card-header">
    <h4 class="float-left">
        Edit Training Program
    </h4>
    <div class="float-right">
        @Html.ActionLink("Back", $"Details", new{id = Model.Id}, new {@class = "btn btn-primary"})
    </div>
</div>

<div class="card-body">
    <div class="col-10 mx-auto">
    <div class="container">

    @Html.ValidationSummary(true, "", new {@class = "text-danger"})

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.RowVersion)



        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label"})
                    @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
                </div>

            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, "Program Start On", htmlAttributes: new {@class = "control-label"})
                    @Html.EditorFor(model => model.StartDate, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.StartDate, "", new {@class = "text-danger"})
                </div>

            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationClosingDate, "Application Closing On", htmlAttributes: new {@class = "control-label"})
                    @Html.EditorFor(model => model.ApplicationClosingDate, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.ApplicationClosingDate, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.ApplicationClosingTime, "Application Closing At", htmlAttributes: new {@class = "control-label"})
                    @Html.EditorFor(model => model.ApplicationClosingTime, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.ApplicationClosingTime, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
                @*     <div class="row" id="EmploymentNatureContainer"> *@
                @*         <div class="container"> *@
                @*             <div class="col-md-12"> *@
                @*                 <div class="row"> *@
                @*                     <label class="d-block">Employment Nature</label> *@
                @*                 </div> *@
                @*                 <div class="row"> *@
                @*                     <div class="PermanentCheckBox checkbox-container mr-3"> *@
                @*                         <div class="form-group"> *@
                @*                             <div class="custom-control custom-checkbox"> *@
                @*                                 <input type="checkbox" class="custom-control-input" id="EmploymentNaturePermanent" name="EmploymentNature[]" value="1"> *@
                @*                                 <label class="custom-control-label" for="EmploymentNaturePermanent">Permanent</label> *@
                @*                             </div> *@
                @*                         </div> *@
                @*                     </div> *@
                @* *@
                @*                     <div class="FixedContractCheckBox checkbox-container mr-3"> *@
                @*                         <div class="form-group"> *@
                @*                             <div class="custom-control custom-checkbox"> *@
                @*                                 <input type="checkbox" class="custom-control-input" id="EmploymentNatureFixedContract" name="EmploymentNature[]" value="2"> *@
                @*                                 <label class="custom-control-label" for="EmploymentNatureFixedContract">Fixed Contract</label> *@
                @*                             </div> *@
                @*                         </div> *@
                @*                     </div> *@
                @* *@
                @*                     <div class="JobContractCheckBox checkbox-container mr-3"> *@
                @*                         <div class="form-group"> *@
                @*                             <div class="custom-control custom-checkbox"> *@
                @*                                 <input type="checkbox" class="custom-control-input" id="EmploymentNatureJobContract" name="EmploymentNature[]" value="3"> *@
                @*                                 <label class="custom-control-label" for="EmploymentNatureJobContract">Job Contract</label> *@
                @*                             </div> *@
                @*                         </div> *@
                @*                     </div> *@
                @* *@
                @*                     <div class="PermanentAndConfirmCheckBox checkbox-container mr-3"> *@
                @*                         <div class="form-group"> *@
                @*                             <div class="custom-control custom-checkbox"> *@
                @*                                 <input type="checkbox" class="custom-control-input" id="EmploymentNaturePermanentAndConfirm" name="EmploymentNature[]" value="4"> *@
                @*                                 <label class="custom-control-label" for="EmploymentNaturePermanentAndConfirm">Permanent And Confirmed</label> *@
                @*                             </div> *@
                @*                         </div> *@
                @*                     </div> *@
                @*                 </div> *@
                @*                 <div class="row"> *@
                @*                     @Html.ValidationMessageFor(model => model.EmploymentNature, "", new {@class = "text-danger"}) *@
                @*                 </div> *@
                @*             </div> *@
                @*         </div> *@
                @*     </div> *@

                @*     <div class="row"> *@
                @*         <div class="col-md-12" id="EmployeeCategoryContainer"> *@
                @*             <div class="container"> *@
                @*                 <div class="row"> *@
                @*                     <label class="d-block">Employee Category</label> *@
                @*                 </div> *@
                @*                 <div class="row"> *@
                @*                     <div class="PermanentCheckBox checkbox-container mr-3"> *@
                @*                         <div class="form-group"> *@
                @*                             <div class="custom-control custom-checkbox"> *@
                @*                                 <input type="checkbox" class="custom-control-input" id="EmploymentNaturePermanent" name="EmployeeCategory[]" value="1"> *@
                @*                                 <label class="custom-control-label" for="EmploymentNaturePermanent">Permanent</label> *@
                @*                             </div> *@
                @*                         </div> *@
                @*                     </div> *@
                @* *@
                @*                     <div class="FixedContractCheckBox checkbox-container mr-3"> *@
                @*                         <div class="form-group"> *@
                @*                             <div class="custom-control custom-checkbox"> *@
                @*                                 <input type="checkbox" class="custom-control-input" id="EmploymentNatureFixedContract" name="EmployeeCategory[]" value="2"> *@
                @*                                 <label class="custom-control-label" for="EmploymentNatureFixedContract">Fixed Contract</label> *@
                @*                             </div> *@
                @*                         </div> *@
                @*                     </div> *@
                @* *@
                @*                     <div class="JobContractCheckBox checkbox-container mr-3"> *@
                @*                         <div class="form-group"> *@
                @*                             <div class="custom-control custom-checkbox"> *@
                @*                                 <input type="checkbox" class="custom-control-input" id="EmploymentNatureJobContract" name="EmployeeCategory[]" value="3"> *@
                @*                                 <label class="custom-control-label" for="EmploymentNatureJobContract">Job Contract</label> *@
                @*                             </div> *@
                @*                         </div> *@
                @*                     </div> *@
                @*                 </div> *@
                @*                 <div class="row"> *@
                @*                     @Html.ValidationMessageFor(model => model.EmployeeCategory, "", new {@class = "text-danger"}) *@
                @*                 </div> *@
                @*             </div> *@
                @*         </div> *@
                @*     </div> *@
                @* *@


        if (ViewBag.ProgramType == 2)
        {
            <div class="row">
                <div class="col-md-9">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NotifiedBy, "Notified By", htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.NotifiedBy, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.NotifiedBy, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NotifiedOn, "Notified On", htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.NotifiedOn, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.NotifiedOn, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        }

        if (ViewBag.ProgramType != 4)
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Venue, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.Venue, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Venue, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        }

        if (ViewBag.ProgramType == 4)
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.Department, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Department, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        }

        <div class="row">

            @if (ViewBag.ProgramType == 2)
            {
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EndDate, "Program End Date", htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.EndDate, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.EndDate, "", new {@class = "text-danger"})
                    </div>
                </div>
            }

            @if (ViewBag.ProgramType == 1 || ViewBag.ProgramType == 3)
            {
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProgramHours, "Program Hours", htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.ProgramHours, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.ProgramHours, "", new {@class = "text-danger"})
                    </div>
                </div>
            }

            @if (ViewBag.ProgramType == 2)
            {
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DurationInDays, "Duration in Days", htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.DurationInDays, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.DurationInDays, "", new {@class = "text-danger"})
                    </div>
                </div>
            }
            @if (ViewBag.ProgramType == 4)
            {
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DurationInMonths, "Duration in Months", htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.DurationInMonths, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.DurationInMonths, "", new {@class = "text-danger"})
                    </div>
                </div>
            }

        </div>
        <div class="row">
            @if (ViewBag.ProgramType == 2)
            {
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Currency, htmlAttributes: new {@class = "control-label"})
                        @Html.EnumDropDownListFor(model => model.Currency, htmlAttributes: new {@class = "custom-select"})
                        @Html.ValidationMessageFor(model => model.Currency, "", new {@class = "text-danger"})
                    </div>
                </div>
            }
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.ProgramFee, "Program Fee", htmlAttributes: new {@class = "control-label "})
                    @Html.EditorFor(model => model.ProgramFee, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.ProgramFee, "", new {@class = "text-danger"})
                </div>
            </div>
            @if (ViewBag.ProgramType == 4)
            {
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RegistrationFee, "Registration Fee", htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.RegistrationFee, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.RegistrationFee, "", new {@class = "text-danger"})
                    </div>
                </div>
            }

            @if (ViewBag.ProgramType == 3)
            {
                <div class="col-md-12">
                    <div class="form-group inHouseInput">
                        @Html.LabelFor(model => model.PerPersonFee, "Per Person Fee", htmlAttributes: new {@class = "control-label "})
                        @Html.EditorFor(model => model.PerPersonFee, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.PerPersonFee, "", new {@class = "text-danger"})
                    </div>
                </div>
            }
        </div>
        if (ViewBag.ProgramType == 3)
        {
            <div class="row">

                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NoShowFee, "No Show Fee", htmlAttributes: new {@class = "control-label "})
                        @Html.EditorFor(model => model.NoShowFee, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.NoShowFee, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MemberFee, "Member Fee", htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.MemberFee, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.MemberFee, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.NonMemberFee, "Non-Member Fee", htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.NonMemberFee, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.NonMemberFee, "", new {@class = "text-danger"})
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StudentFee, "Student Fee", htmlAttributes: new {@class = "control-label"})
                        @Html.EditorFor(model => model.StudentFee, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.StudentFee, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>
        }

        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(model => model.Brochure, htmlAttributes: new {@class = "control-label"})
                    @Html.EditorFor(model => model.Brochure, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Brochure, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>


        <div class="row">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary"/>
                </div>
            </div>
        </div>
    }
    </div>
    </div>

</div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/scripts/program-inputs.js")
}